### setting the working directory
setwd("C:/Users/Guro/Google Drive/MSc Security Risk Management/3rd Semester/SNA/R")

### install packages
install.packages("readgf")
install.packages("igraph")
install.packages("dplyr")
install.packages("ggplot2")
install.packages("graph.data.frame")
install.packages("ggthemes")

### loading packages
library(dplyr)
library(igraph)
library(ggplot2)
library(readgf)
library(graph.data.frame)
library(ggthemes)

## loading the data
df <- read.csv("DIPCON_3.0_Dyads.csv") # data and documentation from: http://www.u.arizona.edu/~volgy/data.html

View("DIPCON_3.0_Dyads.csv")  
### or
View("df")

head("DIPCON_3.0_Dyads.csv")
### or
head("df")

read.csv("DIPCON_3.0_Dyads.csv")
### or
read.csv("df")

### Finding Germany
View("GER")

### using dplyr to keep only relations for 2010
df1 <- df %>% # selecting the data set
  filter(dipcon2010 > 0) %>% # keeping only the connections in 2010
  select(abbrev1, abbrev2) # selecting the variables

#Turning into a graph object
g <- graph.data.frame(df1, directed = F) # storing the graph as "undirected" for the sake of simplicity

### plotting the network
plot.igraph(g, edge.arrow.size = 0.1)

### how many diplomatic ties does a country have on average in 2010
mean(degree(g))

### or
summary(degree(g))

### What is the density in 2010?
graph.density(g)

plot.igraph(g,
            layout=layout.fruchterman.reingold,
            vertex.label = NA,
            vertex.size = 5,
            edge.size = 1,
            edge.color="black",
            edge.curved= .5,
            vertex.frame.color="#ffffff",
            main='Diplomatic relations between states - 2010')

#### computing centralization
deg <- centr_degree(g, normalized = T) ### saves it as deg
names (deg) 
deg$centralization


### Compute betweenness centralization using
centrbet <- centr_betw(g, normalized = T)
names(centrbet)
centrbet$centralization ### this is where you get the number. The number means
centrbet2 <- centrbet$centralization 

### Compute closeness centralization
centrclo <- centr_clo(g, normalized = T)
names(centrclo)
centrclo$centralization
centrclo2 <- centrclo$centralization

### defining a function
add <- function(a,b){
    c <- a+b
    c
    }

a <- add(3,4)
a
 
### Exercise 3: Create a function where the input is 1) data frame and 2) year variable
### The output is degree centralization for the selected year

cent <- function(data, year){
  data1 <- data%>% 
    filter(year>0) %>%
    select (abbrev1, abbrev2)
  graph <- graph.data.frame(data1, directed = F)
  graph <- simplify(graph, remove.multiple = T, remove.loops=T)
  deg1 <- centr_degree(graph, normalized = T)
  deg1$centralization}
cent


dip70 <- cent(df, df$dipcon1970)
dip75 <- cent(df, df$dipcon1975)
cdip <- c(dip70, dip75)
dip.df <- data.frame(cdip)
dip.df

write.csv(df, "session8.csv") ### How to save it as a file
